<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/context
                            https://www.springframework.org/schema/context/spring-context-4.3.xsd">

    <!-- Configuration bean PropertySourcesPlaceholderConfigurer-->
    <!--Name space-->
    <context:property-placeholder location="classpath:application.properties"/>
    <!-- Standard bean definition-->
    <!--    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">-->
    <!--        <property name="locations" value="classpath:application.properties"/>-->
    <!--    </bean>-->

    <!--Dependency Injection via constructor-->
    <bean id="db_driver" class="java.lang.String">
        <constructor-arg type="java.lang.String" value="${db.jdbc.driver}"/>
    </bean>

    <!--(init-method) Configuring bean using an initialization callback that is triggered after the constructor and setters initialisation-->
    <!--(destroy-method) is launched in the process of destroying the application context-->
    <bean id="connectionPool" class="org.example.spring.database.jdbc.ConnectionPool"
          init-method="initMethod"
          destroy-method="destroyMethod">
        <constructor-arg name="poolSize" value="${db.pool.size}"/>
        <!--Dependency Injection via constructor-->
        <constructor-arg name="username" value="${db.username}"/>
        <constructor-arg name="args">
            <list>
                <value>--arg1=value1</value>
                <value>--arg2=value2</value>
                <value>--arg3=value3</value>
            </list>
        </constructor-arg>
        <constructor-arg name="properties">
            <null/>
        </constructor-arg>
        <!--Dependency Injection via set method-->
        <property name="properties">
            <map>
                <entry key="url" value-type="java.lang.String" value="${db.url}"/>
                <entry key="password" value-type="java.lang.String" value="${db.password}"/>
                <entry key="driver" value-ref="db_driver"/>
<!--           SPEL  (in fact, the idea Spel in XML is the same as Jstl in a JSP file)-->
                <entry key="hosts" value="#{'${db.host}'.split(',')}"/>
                <entry key="currentSystemUser" value="#{systemProperties['user.name']}"/>
                <entry key="testsBoolean" value="#{db_driver.length() > 10}"/>
                <entry key="testNewObj" value="#{T(Math).random()}"/>
            </map>
        </property>
    </bean>
    <!--Dependency Injection via static factory method-->
    <bean id="companyRepository" class="org.example.spring.database.repository.CompanyRepository" factory-method="of">
        <constructor-arg ref="connectionPool"/>
    </bean>


</beans>